
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Christmas Scrolling Ticker</title>
    <style>
        body {
            font-family: 'Merriweather', serif;
            margin: 0;
            padding: 0;
            display: flex;
            align-items: center;
            justify-content: center;
            height: 100vh;
            background-color: #0d1b2a; /* Midnight blue */
        }

        .ticker {
            width: 100%;
            overflow: hidden;
            white-space: nowrap;
            background-color: #2b2d42; /* Deep gray */
            color: #f8f9fa; /* Light ivory */
            padding: 10px 0;
            border: 3px solid #f94144; /* Festive red */
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.3);
            display: flex;
        }

        .ticker-content {
            display: inline-block;
            animation: scroll-left 25s linear infinite;
            font-size: 1.2rem;
            color: #8ac926; /* Christmas green */
        }

        .disclaimer {
            font-size: 0.9rem;
            color: #f8f9fa; /* White for disclaimer text */
            padding-left: 20px;
        }

        .disclaimer a {
            color: #8ac926; /* Green link color */
            text-decoration: none;
        }

        .disclaimer a:hover {
            text-decoration: underline;
        }

        @keyframes scroll-left {
            0% {
                transform: translateX(100%);
            }
            100% {
                transform: translateX(-100%);
            }
        }
    </style>
</head>
<body>
    <!-- Christmas Music Background -->
    <audio autoplay loop>
        <source src="your-christmas-music-file.mp3" type="audio/mp3">
        Your browser does not support the audio element.
    </audio>

    <div class="ticker" id="ticker">
        <span class="ticker-content" id="ticker-content">
            <span id="ticker-text">Loading...</span>
            <span class="disclaimer">Disclaimer: Data is updated every 30 seconds. For 3X/4X bonuses, sign up for our lucrative <a href="https://nftitlenetwork.com/ubqt-private-placement" target="_blank"><U>Private Placement</U></a>. Buy $UBQT on Alcor Exchange by <a href="https://proton.alcor.exchange/trade/ubqt-ubitquityllc_xpr-eosio.token" target="_blank"><U>clicking here</U></a>.</span>
        </span>
    </div>

    <script>
        // Define the API URLs
        const ubqtApiUrl = 'https://proton.alcor.exchange/api/v2/tickers/ubqt-ubitquityllc_xpr-eosio.token';
        const xprToUsdApiUrl = 'https://api.coingecko.com/api/v3/simple/price?ids=proton&vs_currencies=usd';

        // Function to fetch and update the ticker
        async function updateTicker() {
            try {
                // Fetch UBQT/XPR price
                const ubqtResponse = await fetch(ubqtApiUrl);
                if (!ubqtResponse.ok) {
                    throw new Error(`HTTP error! status: ${ubqtResponse.status}`);
                }
                const ubqtData = await ubqtResponse.json();
                const lastPrice = parseFloat(ubqtData.last_price);

                // Fetch XPR/USD price
                const xprResponse = await fetch(xprToUsdApiUrl);
                if (!xprResponse.ok) {
                    throw new Error(`HTTP error! status: ${xprResponse.status}`);
                }
                const xprData = await xprResponse.json();
                const xprToUsd = parseFloat(xprData.proton.usd);

                // Calculate UBQT/USD price
                const ubqtToUsd = (lastPrice * xprToUsd).toFixed(6);

                // Create the display string
                const displayText = `üéÑ UBQT/XPR: ${lastPrice} (USD: $${ubqtToUsd}) üéÖ`;

                // Update the ticker text
                document.getElementById('ticker-text').textContent = displayText;
            } catch (error) {
                console.error('Error fetching or displaying data:', error);
                document.getElementById('ticker-text').textContent = '‚ùÑÔ∏è Error fetching data. Please try again later. üéÅ';
            }
        }

        // Initial call to update the ticker
        updateTicker();

        // Update the ticker every 30 seconds
        setInterval(updateTicker, 30000);
    </script>

</body>
</html>
